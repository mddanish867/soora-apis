generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id           String    @id @default(uuid())
  email        String?   @unique
  username     String?    @unique
  password     String?
  mobile       String?   @unique
  name        String?
  picture     String?
  ssoProvider String?
  googleId    String?    @unique
  ssoId       String?
  lastLogin   DateTime @default(now())
  otp          String? // OTP for verification
  otpAttempts        Int?      @default(0) // mobile otp rate limit
  lastOtpRequestTime DateTime? @default(now()) //// mobile otp rate limit
  otpExpiresAt DateTime? // Expiration time for OTP
  isVerified   Boolean?   @default(false) // Status of verification
  magicLink    String?    @unique // Secure random string for authentication
  magicLinkExpiresAt    DateTime?  // Expiration time for the magic link
  isMagicLinkUsed       Boolean?   @default(false) // Status to check if link is used
  is2FAEnabled   Boolean? // MFA tracking
  createdAt    DateTime?  @default(now())
  updatedAt   DateTime? @updatedAt

  @@index([email])
  @@index([ssoId])
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  device    String   // e.g., "iPhone 13", "Windows"
  os        String   // e.g., "iOS", "Windows"
  browser   String   // e.g., "Safari", "Chrome"
  location  String  // e.g., "London, UK", "New York, USA"
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Document {
  id              Int      @id @default(autoincrement())
  fileName        String?
  filePath        String?
  convertedFilePath String?
  type            String?
  convertedType   String?
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt
}


model AccountDeletions {
  id        String   @id @default(cuid())
  userId    String?
  email     String?
  reason    String?
  deletedAt DateTime @default(now())

  @@map("account_deletions")
}